package com.koreait.jpql;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;


public class JpqlMain {

	public static void main(String[] args) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("hello");
		EntityManager em = emf.createEntityManager();
		// Transaction	: 데이터베이스의 상태를 변화시키기 위해 수행하는 작업 단위
		EntityTransaction tx = em.getTransaction();
		tx.begin();
		
		try {
			
			Member member = new Member();
			member.setUsername("member1");
			member.setAge(10);
			em.persist(member);
			
			// 엔티티 프로젝션
//			List<Team> result = em.createQuery("select m.team from Member m", Team.class)
//					.getResultList();
			List<Team> result = em.createQuery("select m.team from Member m", Team.class)
					.getResultList();
			
			/*
			// 엔티티 프로젝션
			List<Member> result = em.createQuery("select m from Member m", Member.class)
									.getResultList();
			*/
			
			
			/*
			// 파라미터 - 위치기반(쓰지말것)
			Member result = em.createQuery("select m from Member m where m.username = ?1", Member.class)
							.setParameter(1, "member1")
							.getSingleResult();
			
			System.out.println("result : " + result.getUsername());
			System.out.println("result : " + result.getAge());
			*/
//			TypedQuery<Member> query 
//				= em.createQuery("select m from Member m where m.username = ?1", Member.class);
//			query.setParameter(1, "member1");
//			
//			Member result = query.getSingleResult();
			
			
			/*
			// 파라미터 - 이름기준
			TypedQuery<Member> query 
				= em.createQuery("select m from Member m where m.username = :username", Member.class);
			query.setParameter("username", "member1");
			
			Member result = query.getSingleResult();
			System.out.println("result : " + result.getUsername());
			System.out.println("result : " + result.getAge());
			*/
			
			/*
			// 타입정보가 명확할때
			TypedQuery<Member> query = em.createQuery("select m from Member m", Member.class);
			
			//List<Member> resultList = query.getResultList();
			
			// 예외발생시켜보기(결과값없기때문에)
			Member result = query.getSingleResult();
			
			System.out.println("result : " + result);
			
//			for( Member member1 : resultList ) {
//				System.out.println("member1 = " + member1.getUsername());
//				System.out.println("member1 = " + member1.getAge());
//			}
			*/
			
			tx.commit();
		}catch(Exception e){
			e.printStackTrace();
			tx.rollback();
		}finally {
			em.close();
			emf.close();
		}
		
		
		
		
		
	}

}
