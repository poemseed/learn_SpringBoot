- jsp, mybatis, mvc2
- spring framework, jsp, mybatis, mvc2, (Maven/Gradle)
- springboot, jsp, mybatis, mvc2, (Maven/Gradle)
- springboot, thymeleaf, jpa, mvc2, (Maven/Gradle)

SpringBoot Framework
	- jsp		-> thymeleaf
	- mybatis	-> jpa
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. Framework
	- 뼈대나 근간을 이루는 코드들의 묶음
	- 프로그램의 기본 흐름이나 구조를 정하고, 이 구조에 자신의 코드를 추가하는 방식으로 개발할 수 있도록 하는 프로그래밍의 기본 틀을 의미
	- 개발에 필요한 구조가 제공되고, 여기에 필요한 부분을 조립하는 형태로 개발이 진행

2. 라이브러리
	- 라이브러리란 자주 사용되는 로직을 재사용하기 편리하도록 잘 정리한 일련의 코드들의 집합

3. Framework VS 라이브러리
	- 프레임워크는 자동차의 프레임 즉 기본적으로 구성하고 있는 뼈대를 말한다.
	- 라이브러리는 자동차의 기능을 하는 부품을 의미한다. 
	- 한번 정해진 자동차의 프레임은 바꿀 수 없다.
	- 소형차를 만들기 위해 뼈대를 사용하는데 이 뼈대로 SUV를 만들 수 없다.(Framework)
	- 그러나 바퀴나 선루프, 헤드라이트 등은 비교적 다른 종류로 쉽게 바뀔 수 있다.(라이브러리)

4. Spring이란?
	- 스프링 프레임워크는 자바 플랫폼을 위한 오픈소스 애플리케이션 프레임워크로서 간단히 Spring이라고 불린다.
	- 동적인 웹 사이트를 개발하기 위한 여러가지 서비스를 제공하고 있다. 
	
5. Spring VS SpringBoot

6. STS
	- 4.*	: java 8
	- 3.*	: thymeleaf, java 11

7. 프로젝트 생성
	- https://start.spring.io/
	- project	: 사용할 빌드 툴 선택(Maven/Gradle)
		-> Maven, Gradle은 프로젝트에 필요한 의존성을 관리하는 빌드 라이프 사이클을 관리해주는 툴이다. 과거에는 Maven을, 최근에는 Gradle
		을 사용한다.
	- Spring Boot	: 버전 선택
		-> SNAPSHOT이 붙은 것은 현재 개발중인 버전, M(Minor)은 정식 릴리즈 되지 않은 버전이고, 아무것도 붙어있지 않은 것은 정식 릴리즈된
		버전이다. 따라서 정식 릴리즈된 버전 중 가장 최근 버전을 선택하자.
	- Project Metadata	: 정보
		-> Group은 기업의 도메인
		-> Artifact는 빌드 결과물, 프로젝트 명

8. DispatcherServlet
	- 1. 핸들러 조회	: 핸들러 매핑을 통해 요청 URL에 매핑된 핸들러(컨트롤러)를 조회한다.
	- 2. 핸들러 어댑터 조회	: 핸들러를 실행할 수 있는 핸들러 어댑터를 조회한다.
	- 3. 핸들러 어댑터 실행	: 핸들러 어댑터를 실행
	- 4. 핸들러 실행	: 핸들러 어댑터가 실제 핸들러를 실행한다.
	- 5. ModelAndView 반환	: 핸들러 어댑터는 핸들러가 반환하는 정보를 ModelAndView로 변환해서 반환한다.
	- 6. viewResolver 호출	: 뷰 리졸버를 찾고 실행한다.
	- 7. view 반환	: 뷰 리졸버를 뷰의 논리이름을 물리 이름으로 바꾸고, 렌터링 역할을 담당하는 뷰 객체를 반환한다.
	- 8. 뷰 렌더링	: 뷰를 통해서 뷰를 렌더링한다.

 8-1. DispatcherServlet
	- 스프링 MVC도 프론트 컨트롤러 패턴으로 구현되어 있다.
	- 스프링 MVC의 프론트 컨트롤러가 바로 디스패처 서블릿이다.
	- 그리고 이 디스패처 서블릿이 스프링 MVC의 핵심이다.
	- DispatcherServlet -> FrameworkServlet -> HttpservletBean -> HttpServlet

